                    МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
   ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ



                           Кафедра Програмної інженерії




                                        Звіт
                              з лабораторної роботи №3
                    з дисципліни: «Скриптові мови програмування»
               з теми: «Створення Web-застосунків за допомогою PHP»




Виконав:                                                              Перевірив:
ст. гр. ПЗПІ-23-3                                  Старший викладач кафедри ПІ
Білоус А. А.                                                       Сокорчук І. П.




                                   Харків – 2025
                                                                                  2
          3 СТВОРЕННЯ WEB-ЗАСТОСУНКІВ ЗА ДОПОМОГОЮ PHP
     3.1 Постановка задачі

     Лабораторна робота спрямована на розробку веб-застосунку «Інтернет-
магазин» з використанням скриптової мови програмування PHP. Застосунок має
реалізувати базовий функціонал електронної комерції, включаючи відображення
товарів, управління кошиком та взаємодію з користувачем через веб-інтерфейс.
     Основні вимоги до реалізації:
      –    створення двосторінкового веб-застосунку: «Товари» (Products) та
           «Кошик» (Cart);
      –    кожна   сторінка   повинна   мати    єдину   структуру,   що     включає
           «Шапку» (Header), «Тіло» (Body) та «Підвал» (Footer);
      –    на сторінці «Товари» має бути представлений список доступних
           продуктів, для кожного з яких відображається назва, ціна, короткий опис,
           зображення та можливість вказати бажану кількість для покупки;
      –    на сторінці «Кошик» повинен відображатися список усіх товарів, доданих
           користувачем, у вигляді таблиці, що включає назву, ціну за одиницю,
           кількість, сумарну вартість для кожного товару, а також можливість
           видалення товару з кошика;
      –    загальна сума до сплати за всі товари у кошику має бути розрахована та
           відображена;
      –    у випадку, якщо кошик порожній, повинно відображатися відповідне
           повідомлення та посилання для переходу на сторінку «Товари»;
      –    необхідно реалізувати перевірку введених даних, зокрема кількості
           товарів (позитивне число);
      –    код програми повинен бути структурований за допомогою функцій та, за
           можливості, відповідати принципам розділення відповідальності;
      –    забезпечити захист від базових веб-вразливостей, таких як XSS.

     3.2 Хід роботи

     У процесі виконання лабораторної роботи було розроблено веб-застосунок
«Інтернет-магазин», що демонструє основні принципи веб-програмування на PHP.
                                                                                 3
Нижче описано інженерні рішення, підходи та технології, які були використані для
реалізації поставлених завдань.

     3.2.1 Архітектура застосунку

     Для забезпечення масштабованості та підтримки, застосунок розроблено
з урахуванням принципів розділення відповідальності, що наближає його до
архітектури Model-View-Controller (MVC), хоча і в спрощеному вигляді.
      –   Модель (Model): Представлена файлами «db.php» та «functions.php»,
          які відповідають за взаємодію з базою даних та бізнес-логіку кошика
          відповідно;
      –   Вид (View): Реалізований за допомогою PHTML-файлів («.phtml»
          розширення), які містять HTML-розмітку та вбудований PHP-код для
          динамічного відображення даних. До них належать «tpl/header.phtml»,
          «tpl/footer.phtml», «tpl/products.phtml» та «tpl/cart.phtml»;
      –   Контролер (Controller): Функцію контролера виконує файл «index.php»,
          який є єдиною точкою входу, обробляє HTTP-запити, керує логікою
          застосунку та обирає відповідний «Вид» для відображення.

     3.2.2 Взаємодія з базою даних

     Для зберігання інформації про продукти було обрано легкодоступну та
файлову базу даних SQLite. Взаємодія з нею здійснюється через розширення PHP
Data Objects (PDO), що забезпечує гнучкість та безпеку.
     а)   Файл «db.php» містить функції для роботи з базою даних:
          1)   «get_pdo()»: Створює та повертає об’єкт PDO для підключення до
               SQLite-файлу («store.db»). Застосовано патерн «синглтон» для PDO-
               об’єкта, щоб уникнути багаторазового підключення;
          2)   «init_db()»: Відповідає за ініціалізацію схеми бази даних, створюючи
               таблицю «products» (з полями «id», «name», «description», «price»,
               «image_name»), якщо вона ще не існує. Також реалізовано початкове
               заповнення таблиці тестовими даними для демонстрації;
                                                                                     4
          3)   «get_all_products()»: Отримує повний список усіх доступних
               продуктів з таблиці «products»;
          4)   «get_product_by_id($id)»: Отримує інформацію про конкретний
               продукт за його ідентифікатором;
     б)   Використання PDO забезпечує безпеку від SQL-ін’єкцій завдяки
          підготовленим запитам (prepared statements), що критично для веб-
          застосунків.

     3.2.3 Управління кошиком користувача

     Вся бізнес-логіка, пов’язана з управлінням вмістом кошика, централізована
у файлі «functions.php». Це забезпечує чистий поділ відповідальності та полегшує
підтримку коду.
     а)   Кошик зберігається у сесії користувача («$_SESSION[’cart’]»), що
          дозволяє зберігати його вміст між різними запитами сторінок без
          використання постійної бази даних для тимчасових даних;
     б)   Реалізовані ключові функції для операцій з кошиком:
          1)   «add_to_cart($product_id, $quantity)»: Додає вказану кількість товару
               до кошика. Робить перевірку кількості (має бути в діапазоні від 1 до
               99) та перевірку наявності продукту в базі даних;
          2)   «get_cart_items()»: Формує повний список товарів, що знаходяться
               у кошику, з детальною інформацією (назва, ціна, зображення,
               кількість, сума за товар), отримуючи ці дані з бази даних;
          3)   «remove_from_cart($product_id)»: Видаляє зазначений товар з
               кошика;
          4)   «clear_cart()»: Повністю очищає вміст кошика;
          5)   «get_cart_total()»: Розраховує загальну суму всіх товарів у кошику.
     в)   Механізм повідомлень (успішні, помилкові або загальні) реалізовано
          через    сесію.   Повідомлення     зберігаються    у     «$_SESSION»       і
          відображаються на наступному завантаженні сторінки, після чого
          видаляються з сесії.
                                                                                  5
     3.2.4 Обробка HTTP-запитів та маршрутизація

     Файл «index.php» виступає як основний контролер застосунку:
     –    він є єдиною точкою входу для всіх запитів;
     –    використовує «session_start()» для ініціалізації сесійного механізму;
     –    обробляє   «POST»-запити,     що    надходять    від   форм   (наприклад,
          «Купити», «Вилучити»), використовуючи параметр «$_GET[’action’]» для
          визначення необхідної операції;
     –    після виконання «POST»-операції застосовується патерн Post/Redirect/
          Get (PRG), який реалізується за допомогою «header(’Location: …’)» та
          «exit()». Це запобігає випадковій повторній відправці даних форми при
          оновленні сторінки браузером;
     –    маршрутизація між сторінками «Товари» та «Кошик» здійснюється на
          основі параметра «$_GET[’page’]», що дозволяє включати відповідний
          PHTML-шаблон;
     –    реалізовано функцію «e($val)» як обгортку для «htmlspecialchars()» для
          безпечного виведення даних у HTML, що запобігає XSS-атакам.

     3.2.5 Представлення та інтерфейс користувача

     Веб-інтерфейс реалізовано за допомогою HTML з використанням PHTML-
шаблонів та стилізовано за допомогою CSS.
     а)   Структура сторінок: Застосунок дотримується єдиної структури сторінок:
          1)   «tpl/header.phtml»: Містить «<head>» секцію, заголовок сайту та
               навігаційне меню (посилання на «Товари» та «Кошик»). Також
               відображає системні повідомлення;
          2)   «tpl/footer.phtml»: Містить завершальний HTML-код та інформацію
               про авторські права;
          3)   «tpl/products.phtml»: Формує сітку «div»-елементів, кожен з яких
               представляє товар з його зображенням, назвою, ціною, описом та
               формою для додавання до кошика;
          4)   «tpl/cart.phtml»: Відображає вміст кошика у вигляді таблиці, що
               містить деталі кожного товару, сумарну вартість та кнопки для
                                                                                6
              видалення окремих товарів або очищення всього кошика. У випадку
              порожнього кошика виводиться відповідне текстове повідомлення та
              посилання на сторінку «Товари».
     б)   Стилізація (CSS): Файл «style.css» містить CSS-правила для оформлення
          інтерфейсу, включаючи адаптивну сітку для товарів, стилі для
          кнопок, таблиць, повідомлень та загального макету сторінки (зокрема,
          «прилипаючий» футер).

     3.3 Висновки

     У результаті виконання лабораторної роботи було успішно розроблено веб-
застосунок «Інтернет-магазин» на PHP, що відповідає всім поставленим вимогам.
Було здобуто практичні навички у:
      –   створенні веб-застосунків з використанням PHP, HTML та CSS;
      –   організації взаємодії з файловою базою даних SQLite через PDO для
          зберігання даних про продукти;
      –   реалізації та управлінні механізмом сесій для підтримки стану кошика
          користувача;
      –   розділенні бізнес-логіки, представлення та контролера застосунку, що
          покращує модульність та спрощує подальшу підтримку;
      –   обробці HTTP-запитів (GET та POST) та реалізації патерну Post/Redirect/
          Get для коректної взаємодії з формами;
      –   забезпеченні базового рівня безпеки застосунку шляхом використання
          «htmlspecialchars» для захисту від XSS-атак;
      –   розробці зручного та інтуїтивно зрозумілого інтерфейсу користувача.
     Реалізоване програмне забезпечення є функціональним прототипом інтернет-
магазину, демонструючи основні компоненти та підходи до веб-розробки.
                                                                            7
                                   ДОДАТОК А
                                   Відеозапис

     Відеозапис презентації результатів лабораторної роботи: https://youtu.be/vhNLI-I81O4


Хронологічний опис відеозапису:
     –   00:00 – Вступ та структура проекту;
     –   00:35 – Файл index.php;
     –   00:55 – Файл db.php;
     –   01:05 – Функція get_pdo();
     –   01:40 – Функція ініціалізації бази даних init_db();
     –   02:35 – Файл functions.php;
     –   02:45 – Функція add_to_cart();
     –   03:25 – Функція get_cart_items();
     –   04:00 – Функції роботи з кошиком;
     –   04:30 – Файл index.php, функція друку e();
     –   04:50 – Обробка запитів дії POST;
     –   05:45 – Відображення сторінки;
     –   06:00 – Шаблон tpl/header.phtml;
     –   06:52 – Шаблон tpl/cart.phtml;
     –   07:35 – Шаблон tpl/products.phtml;
     –   08:02 – Шаблон tpl/footer.phtml;
     –   08:15 – Демонстрація інтернет магазину;
     –   09:07 – Демонстрація сторінки кошику;
     –   09:35 – Очищення кошику.
                                                                                8
                                   ДОДАТОК Б
                                  Програмний код

      Б.1 Вміст файлу index.php

      GitHub репозиторій: https://github.com/NureBilousAnton/smp-pzpi-23-3-bilous-anton/blob/main/Lab3/smp-pzpi-23-3-bilous-anton-lab3/index.php

 1   <?php
 2   session_start();
 3
 4   require_once 'db.php';
 5   require_once 'functions.php';
 6
 7   init_db();
 8
 9   function e($val) {
10       return htmlspecialchars($val ?? '', ENT_QUOTES, 'UTF-8');
11   }
12
13
14 if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_GET['action'])) {
15     switch($_GET['action']) {
16         case 'add_to_cart':
17             if (isset($_POST['product_id'])) {
18                 add_to_cart($_POST['product_id'], $_POST['quantity'] ??
   1);
19             }
20             header('Location: index.php?page=products');
21             exit;
22
23         case 'remove_from_cart':
24             if (isset($_POST['product_id'])) {
25                 remove_from_cart($_POST['product_id']);
26             }
27             header('Location: index.php?page=cart');
28             exit;
29
30         case 'clear_cart':
31             clear_cart();
32             header('Location: index.php?page=cart');
33             exit;
34     }
35 }
36
37
38 $cart_item_count = isset($_SESSION['cart']) ?
   count($_SESSION['cart']) : 0;
39 foreach (['message', 'error_message', 'success_message'] as $msg) {
40     $$msg = $_SESSION[$msg];
41     unset($_SESSION[$msg]);
42 }
                                                                                9

43
44   include 'tpl/header.phtml';
45
46   switch ($_GET['page'] ?? 'products') {
47       case 'cart':
48           $cart_items = get_cart_items();
49           $cart_total = get_cart_total();
50           include 'tpl/cart.phtml';
51           break;
52       case 'products':
53       default:
54           $products = get_all_products();
55           include 'tpl/products.phtml';
56           break;
57   }
58
59   include 'tpl/footer.phtml';
60   ?>
61


      Б.2 Вміст файлу db.php

      GitHub репозиторій: https://github.com/NureBilousAnton/smp-pzpi-23-3-bilous-anton/blob/main/Lab3/smp-pzpi-23-3-bilous-anton-lab3/db.php

 1 <?php
 2 define('DB_FILE', __DIR__ . '/store.db');
 3
 4 function get_pdo() {
 5     static $pdo = null;
 6
 7     if ($pdo !== null) {
 8         return $pdo;
 9     }
10
11     try {
12         $pdo = new PDO('sqlite:' . DB_FILE);
13         $pdo->setAttribute(PDO::ATTR_ERRMODE,
   PDO::ERRMODE_EXCEPTION); // throw exeptions
14         $pdo->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE,
   PDO::FETCH_ASSOC); // parse into dicts
15     } catch (PDOException $e) {
16         exit("DB connection failed: " . $e->getMessage());
17     }
18
19     return $pdo;
20 }
21
22 function get_all_products() {
23     return get_pdo()->query("SELECT * FROM products")->fetchAll();
24 }
25
26 function get_product_by_id($id) {
                                                                              10

27     $stmt = get_pdo()->prepare("SELECT * FROM products WHERE id = ?");
28     $stmt->execute([$id]);
29     return $stmt->fetch();
30 }
31
32
33 function init_db() {
34     $pdo = get_pdo();
35
36     try {
37         $pdo->exec("CREATE TABLE IF NOT EXISTS products (
38              id INTEGER PRIMARY KEY AUTOINCREMENT,
39              name TEXT NOT NULL,
40              description TEXT,
41              price REAL NOT NULL,
42              image_name TEXT
43         )");
44
45         $query = $pdo->query("SELECT COUNT(*) as count FROM products");
46         if ($query->fetchColumn() != 0) {
47              return;
48         }
49
50         $products_to_seed = [
51              ['Кола', 'Пляшка газованого солодкого напою', 45, 'cola'],
52              ['Вода', 'Пляшка питної мінеральної води', 20, 'water'],
53              ['Хліб', 'Свіжий хліб', 20.50, 'bread'],
54              ['Кавун', 'Смачний кавун з теплиці', 50, 'watermelon'],
55              ['Слоненя', 'М\'яке PHP слоненя', 500, 'elephant'],
56              ['Тенші', 'Тенші фумо', 2081.97, 'tenshi'],
57              ['Windows', 'Ліцензія Windows 11 Pro', 7999, 'windows'],
58              ['Toyota Corolla', 'Нова Toyota Corolla 2025', 916500,
   'corolla'],
59         ];
60
61         $query = $pdo->prepare("INSERT INTO products (name,
   description, price, image_name) VALUES (?, ?, ?, ?)");
62         foreach ($products_to_seed as $product) {
63              $query->execute($product);
64         }
65     } catch (PDOException $e) {
66         exit("DB initialization failed: " . $e->getMessage());
67     }
68 }
69 ?>
70


     Б.3 Вміст файлу functions.php

     GitHub репозиторій: https://github.com/NureBilousAnton/smp-pzpi-23-3-bilous-anton/blob/main/Lab3/smp-pzpi-23-3-bilous-anton-lab3/functions.php

 1 <?php
                                                                        11

 2 require_once 'db.php';
 3
 4 function add_to_cart($product_id, $quantity) {
 5     $product_id = (int)$product_id;
 6     $quantity = (int)$quantity;
 7
 8     if ($quantity < 1) {
 9         $_SESSION['error_message'] = "Не можна купити менше одного
   товару!";
10         return;
11     }
12     if ($quantity > 99) {
13         $_SESSION['error_message'] = "Не можна купити більше 99
   товарів!";
14         return;
15     }
16
17     $_SESSION['cart'] ??= [];
18
19     $product = get_product_by_id($product_id);
20     if (!$product) {
21         $_SESSION['error_message'] = "Продукт не зайдено!";
22         return;
23     }
24
25     $_SESSION['cart'][$product_id] ??= 0;
26     $_SESSION['cart'][$product_id] += $quantity;
27     $_SESSION['success_message'] = $product['name'] . " додано до
   кошику.";
28 }
29
30 function get_cart_items() {
31     if (empty($_SESSION['cart'])) {
32         return [];
33     }
34
35     $cart_items = [];
36     foreach ($_SESSION['cart'] as $product_id => $quantity) {
37         if ($quantity == 0) {
38             unset($_SESSION['cart'][$product_id]);
39             continue;
40         }
41
42         $product = get_product_by_id($product_id);
43         if (!$product) {
44             continue;
45         }
46
47         $cart_items[] = [
48             'id' => $product_id,
49             'name' => $product['name'],
50             'price' => $product['price'],
51             'image_name' => $product['image_name'],
52             'quantity' => $quantity,
53             'subtotal' => $product['price'] * $quantity,
54         ];
                                                                                  12

55         }
56
57         return $cart_items;
58   }
59
60   function remove_from_cart($product_id) {
61       if (isset($_SESSION['cart'][(int)$product_id])) {
62           unset($_SESSION['cart'][(int)$product_id]);
63           $_SESSION['success_message'] = "Товар видалено з кошика.";
64       }
65   }
66
67   function clear_cart() {
68       $_SESSION['cart'] = [];
69       $_SESSION['success_message'] = "Кошик очищено.";
70   }
71
72   function get_cart_total() {
73       $total = 0;
74       $cart_items = get_cart_items();
75       foreach ($cart_items as $item) {
76           $total += $item['subtotal'];
77       }
78       return $total;
79   }
80   ?>
81


         Б.4 Вміст файлу tpl/header.phtml

         GitHub репозиторій: https://github.com/NureBilousAnton/smp-pzpi-23-3-bilous-anton/blob/main/Lab3/smp-pzpi-23-3-bilous-anton-lab3/tpl/header.phtml

 1 <!DOCTYPE html>
 2 <html lang="uk">
 3 <head>
 4     <meta charset="UTF-8">
 5     <meta name="viewport" content="width=device-width, initial-
   scale=1.0">
 6     <title>Web-Магазин</title>
 7     <link rel="stylesheet" href="style.css">
 8 </head>
 9 <body>
10 <header>
11     <div class="container">
12          <h1><a href="index.php">Web-Магазин</a></h1>
13
14          <nav><ul>
15          <li><a href="index.php?page=products">Товари</a></li>
16          <li><a href="index.php?page=cart">Кошик (<?=
   e($cart_item_count); ?>)</a></li>
17          </ul></nav>
18     </div>
                                                                              13

19 </header>
20 <main class="container">
21 <?php
22     if (isset($message)) {
23         echo '<p class="message">' . e($message) . '</p>';
24     }
25     if (isset($success_message)) {
26         echo '<p class="message success">' . e($success_message) . '</
   p>';
27     }
28     if (isset($error_message)) {
29         echo '<p class="message error">' . e($error_message) . '</p>';
30     }
31 ?>
32


     Б.5 Вміст файлу tpl/products.phtml

     GitHub репозиторій: https://github.com/NureBilousAnton/smp-pzpi-23-3-bilous-anton/blob/main/Lab3/smp-pzpi-23-3-bilous-anton-lab3/tpl/products.phtml

 1 <h2>Список товарів</h2>
 2 <div class="products-grid">
 3     <?php if (empty($products)): ?>
 4     <p>На даний момент товарів немає.</p>
 5     <?php else: ?>
 6
 7     <?php foreach ($products as $product): ?> <div class="product-
   card">
 8
 9         <img src="images/<?= e($product['image_name'] ?: 'default'); ?
   >" alt="<?= e($product['name']); ?>">
10         <h3><?= e($product['name']); ?></h3>
11         <p class="price"><?= number_format($product['price'], 2); ?>
   грн</p>
12         <p><?= e($product['description']); ?></p>
13
14         <form action="index.php?action=add_to_cart" method="post">
15             <input type="hidden" name="product_id" value="<?=
   $product['id']; ?>">
16             <label for="quantity_<?= $product['id']; ?>">Кількість:</
   label>
17             <input type="number" id="quantity_<?= $product['id']; ?>"
   name="quantity" value="1" min="1" max="99" style="width: 50px;">
18             <button type="submit">Купити</button>
19         </form>
20
21     </div> <?php endforeach; ?>
22
23     <?php endif; ?>
24 </div>
25
                                                                               14
      Б.6 Вміст файлу tpl/cart.phtml

      GitHub репозиторій: https://github.com/NureBilousAnton/smp-pzpi-23-3-bilous-anton/blob/main/Lab3/smp-pzpi-23-3-bilous-anton-lab3/tpl/cart.phtml

 1 <h2>Ваш кошик</h2>
 2 <?php if (empty($cart_items)): ?>
 3     <p>Ваш кошик порожній. <a href="index.php?page=products">Перейти до
   покупок</a>.</p>
 4 <?php else: ?>
 5
 6 <table class="cart-table">
 7     <thead> <tr>
 8          <th>Зображення</th>
 9          <th>Назва</th>
10          <th>Ціна</th>
11          <th>Кількість</th>
12          <th>Сума</th>
13          <th>Дія</th>
14     </tr> </thead>
15
16     <tbody> <?php foreach ($cart_items as $item): ?> <tr>
17          <td><img src="images/<?= e($item['image_name'] ?: 'default'); ?
   >" alt="<?= e($item['name']); ?>" style="width:50px; height:auto;"></
   td>
18          <td><?= e($item['name']); ?></td>
19          <td><?= number_format($item['price'], 2); ?> грн</td>
20          <td><?= $item['quantity']; ?></td>
21          <td><?= number_format($item['subtotal'], 2); ?> грн</td>
22          <td> <form action="index.php?action=remove_from_cart"
   method="post" style="display:inline;">
23              <input type="hidden" name="product_id" value="<?=
   $item['id']; ?>">
24              <button type="submit" class="remove-btn">Вилучити</button>
25          </form> </td>
26     </tr> <?php endforeach; ?> </tbody>
27
28     <tfoot> <tr>
29          <td colspan="4" style="text-align:right;"><strong>Загалом:</
   strong></td>
30          <td><strong><?= number_format($cart_total, 2); ?> грн</
   strong></td>
31          <td> <form action="index.php?action=clear_cart" method="post">
32              <button type="submit" class="clear-btn">Очистити кошик</
   button>
33          </form> </td>
34     </tr> </tfoot>
35 </table>
36
37 <?php endif; ?>
38
                                                                               15
      Б.7 Вміст файлу tpl/footer.phtml

      GitHub репозиторій: https://github.com/NureBilousAnton/smp-pzpi-23-3-bilous-anton/blob/main/Lab3/smp-pzpi-23-3-bilous-anton-lab3/tpl/footer.phtml

1   </main>
2   <footer>
3       <div class="container">
4            <p>© <?= date('Y'); ?> Web-Магазин. Усі права захищено.</p>
5       </div>
6   </footer>
7   </body>
8   </html>
9


      Б.8 Вміст файлу style.css

      GitHub репозиторій: https://github.com/NureBilousAnton/smp-pzpi-23-3-bilous-anton/blob/main/Lab3/smp-pzpi-23-3-bilous-anton-lab3/style.css

  1   html { height: 100%; }
  2
  3   body {
  4       margin: 0;
  5       padding: 0;
  6       line-height: 1.6;
  7       font-family: Arial, sans-serif;
  8       color: #333;
  9       background-color: #f4f4f4;
 10       /* sticky footer */
 11       display: flex;
 12       flex-direction: column;
 13       min-height: 100vh; /* take whole viewport */
 14   }
 15
 16   .container {
 17       width: 80%;
 18       margin: auto;
 19       overflow: hidden;
 20       padding: 0 20px;
 21   }
 22
 23   header {
 24       color: #fff;
 25       background: #333;
 26       padding-top: 25px;
 27       padding-bottom: 25px;
 28       border-bottom: #0779e4 3px solid;
 29   }
 30
 31   header .container {
                                                  16

32       display: flex;
33       justify-content: space-between;
34       width: 80%;
35       margin: auto;
36       overflow: hidden;
37       align-items: center;
38   }
39
40
41   header a {
42       color: #fff;
43       font-size: 16px;
44       text-decoration: none;
45       text-transform: uppercase;
46   }
47
48   header h1 {
49       margin: 0;
50       font-size: 24px;
51   }
52   header h1 a { font-size: inherit; }
53
54   header ul {
55       margin: 0;
56       padding: 0;
57       display: flex;
58       list-style: none;
59   }
60   header li {
61       display: inline;
62       padding: 0 0 0 20px;
63   }
64   header li:first-child { padding-left: 0; }
65
66   main.container {
67       flex-grow: 1; /* push the footer */
68       padding: 20px 0;
69   }
70
71
72   .message {
73       padding: 10px;
74       border-radius: 5px;
75       margin-bottom: 15px;
76       color: #006600;
77       background-color: #e6ffe6;
78       border: 1px solid #b3ffb3;
79   }
80   .message.success {
81       color: #3c763d;
82       background-color: #dff0d8;
83       border: 1px solid #d6e9c6;
84   }
85
86   .message.error, ul.message.error {
87       color: #a94442;
                                                                          17

 88       background-color: #f2dede;
 89       border: 1px solid #ebccd1;
 90   }
 91
 92
 93   .products-grid {
 94       display: grid;
 95       gap: 20px;
 96       grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
 97   }
 98
 99   .product-card {
100       padding: 15px;
101       text-align: center;
102       background: #fff;
103       border: 1px solid #ddd;
104       border-radius: 7px;
105   }
106
107   .product-card img {
108       height: 150px;
109       max-width: 100%;
110       object-fit: contain;
111       margin-bottom: 10px;
112   }
113
114   .product-card h3 {
115       margin-top: 0;
116       color: #0779e4;
117   }
118
119   .product-card .price {
120       font-weight: bold;
121       color: #5cb85c;
122   }
123
124   .product-card form { margin-top: 10px; }
125   .product-card label { margin-right: 5px; }
126
127   .product-card input[type="number"] {
128       padding: 5px;
129       border: 1px solid #ccc;
130       border-radius: 3px;
131       margin-right: 10px;
132   }
133
134   button, .button {
135       color: white;
136       background-color: #0779e4;
137       padding: 8px 15px;
138       text-align: center;
139       text-decoration: none;
140       display: inline-block;
141       font-size: 14px;
142       border: none;
143       border-radius: 5px;
                                                                   18

144       cursor: pointer;
145       transition: background-color 0.3s ease;
146   }
147
148   button:hover, .button:hover { background-color: #055aab; }
149
150   .remove-btn { background-color: #d9534f; }
151   .remove-btn:hover { background-color: #c9302c; }
152
153   .clear-btn { background-color: #f0ad4e; }
154   .clear-btn:hover { background-color: #ec971f; }
155
156
157   .cart-table {
158       width: 100%;
159       border-collapse: collapse;
160       margin-top: 20px;
161       background: #fff;
162   }
163
164   .cart-table th, .cart-table td {
165       padding: 10px;
166       text-align: left;
167       border: 1px solid #ddd;
168   }
169
170   .cart-table th {
171       background-color: #f0f0f0;
172   }
173
174   .cart-table img {
175       margin: auto;
176       display: block;
177   }
178
179   .cart-table tfoot td { font-weight: bold; }
180
181   footer {
182       color: #fff;
183       background: #333;
184       padding: 10px;
185       text-align: center;
186       margin-top: auto; /* push the footer */
187       width: 100%;
188   }
189

